//..............................................................................

const {util} = cxq;
const {addProperties } = util;

const {isInArray     } = cxq.meshDocGen;
//..............................................................................

//..............................................................................
const mbDetails =
{
    MB10x10 :
    {
        A1:'A1',A2:'A2',A3:'A3',A4:'A4',A5:'A5',A6:'A6',A7:'A7',A8:'A8',A9:'A9',
        B1:'B1',B2:'B2',B3:'B3',B4:'B4',B5:'B5',B6:'B6',B7:'B7',B8:'B8',B9:'B9',
        C1:'C1',C2:'C2',                                        C8:'C8',C9:'C9',
        D1:'D1',D2:'D2',                                        D8:'D8',D9:'D9',
        E1:'E1',E2:'E2',                                        E8:'E8',E9:'E9',
        F1:'F1',F2:'F2',                                        F8:'F8',F9:'F9',
        G1:'G1',G2:'G2',                                        G8:'G8',G9:'G9',
        H1:'H1',H2:'H2',H3:'H3',H4:'H4',H5:'H5',H6:'H6',H7:'H7',H8:'H8',H9:'H9',
        J1:'J1',J2:'J2',J3:'J3',J4:'J4',J5:'J5',J6:'J6',J7:'J7',J8:'J8',J9:'J9',
    },
    MB14x10 :
    {
        A1:'A1',A2:'A2',A3:'A3',A4:'A',A5:'A5',A6:'A6',A7:'A7',A8:'A8',A9:'A9',A10:'A10',A11:'A11',A12:'A12',A13:'A13',
        B1:'B1',B2:'B2',B3:'B3',B4:'B',B5:'B5',B6:'B6',B7:'B7',B8:'B8',B9:'B9',B10:'B10',B11:'B11',B12:'B12',B13:'B13',
        C1:'C1',C2:'C2',                                                                           C12:'C12',C13:'C13',
        D1:'D1',D2:'D2',                                                                           D12:'D12',D13:'D13',
        E1:'E1',E2:'E2',                                                                           E12:'E12',E13:'E13',
        F1:'F1',F2:'F2',                                                                           F12:'F12',F13:'F13',
        G1:'G1',G2:'G2',                                                                           G12:'G12',G13:'G13',
        H1:'H1',H2:'H2',H3:'H3',H4:'H',H5:'H5',H6:'H6',H7:'H7',H8:'H8',H9:'H9',H10:'H10',H11:'H11',H12:'H12',H13:'H13',
        J1:'J1',J2:'J2',J3:'J3',J4:'J',J5:'J5',J6:'J6',J7:'J7',J8:'J8',J9:'J9',J10:'J10',J11:'J11',J12:'J12',J13:'J13',
    },
    MB14x14 :
    {
        A1:'A1',A2:'A2',A3:'A3',A4:'A4',A5:'A5',A6:'A6',A7:'A7',A8:'A8',A9:'A9',A10:'A10',A11:'A11',A12:'A12',A13:'A13',
        B1:'B1',B2:'B2',B3:'B3',B4:'B4',B5:'B5',B6:'B6',B7:'B7',B8:'B8',B9:'B9',B10:'B10',B11:'B11',B12:'B12',B13:'B13',
        C1:'C1',C2:'C2',                                                                            C12:'C12',C13:'C13',
        D1:'D1',D2:'D2',                                                                            D12:'D12',D13:'D13',
        E1:'E1',E2:'E2',                                                                            E12:'E12',E13:'E13',
        F1:'F1',F2:'F2',                                                                            F12:'F12',F13:'F13',
        G1:'G1',G2:'G2',                                                                            G12:'G12',G13:'G13',
        H1:'H1',H2:'H2',                                                                            H12:'H12',H13:'H13',
        J1:'J1',J2:'J2',                                                                            J12:'J12',J13:'J13',
        K1:'K1',K2:'K2',                                                                            K12:'K12',K13:'K13',
        L1:'L1',L2:'L2',                                                                            L12:'L12',L13:'L13',
        M1:'M1',M2:'M2',M3:'M3',M4:'M4',M5:'M5',M6:'M6',M7:'M7',M8:'M8',M9:'M9',M10:'M10',M11:'M11',M12:'M12',M13:'M13',
        N1:'N1',N2:'N2',N3:'N3',N4:'N4',N5:'N5',N6:'N6',N7:'N7',N8:'N8',N9:'N9',N10:'N10',N11:'N11',N12:'N12',N13:'N13',
    },
    MB14x14MCU :
    {
                                                        A7:'A7',A8:'A8',A9:'A9',A10:'A10',A11:'A11',A12:'A12',A13:'A13',
                                                        B7:'B7',B8:'B8',B9:'B9',B10:'B10',B11:'B11',B12:'B12',B13:'B13',
                                                                                                    C12:'C12',C13:'C13',
                                                                                                    D12:'D12',D13:'D13',
                                                                                                    E12:'E12',E13:'E13',
        F1:'F1',F2:'F2',                                                                            F12:'F12',F13:'F13',
        G1:'G1',G2:'G2',                                                                            G12:'G12',G13:'G13',
        H1:'H1',H2:'H2',                                                                            H12:'H12',H13:'H13',
        J1:'J1',J2:'J2',                                                                            J12:'J12',J13:'J13',
        K1:'K1',K2:'K2',                                                                            K12:'K12',K13:'K13',
        L1:'L1',L2:'L2',                                                                            L12:'L12',L13:'L13',
        M1:'M1',M2:'M2',M3:'M3',M4:'M4',M5:'M5',M6:'M6',M7:'M7',M8:'M8',M9:'M9',M10:'M10',M11:'M11',M12:'M12',M13:'M13',
        N1:'N1',N2:'N2',N3:'N3',N4:'N4',N5:'N5',N6:'N6',N7:'N7',N8:'N8',N9:'N9',N10:'N10',N11:'N11',N12:'N12',N13:'N13',
    },
    MB22x14 :
    {
        A1:'A1',A:'A2',A3:'A3',A4:'A4',A5:'A5',A6:'A6',A7:'A7',A8:'A8',A9:'A9',A10:'A10',A11:'A11',A12:'A12',A13:'A13',A14:'A14',A15:'A15',A16:'A16',A17:'A17',A18:'A18',A19:'A19',A20:'A20',A21:'A21',
        B1:'B1',B:'B2',B3:'B3',B4:'B4',B5:'B5',B6:'B6',B7:'B7',B8:'B8',B9:'B9',B10:'B10',B11:'B11',B12:'B12',B13:'B13',B14:'B14',B15:'B15',B16:'B16',B17:'B17',B18:'B18',B19:'B19',B20:'B20',B21:'B21',
        C1:'C1',C:'C2',                                                                                                                                                            C20:'C20',C21:'C21',
        D1:'D1',D:'D2',                                                                                                                                                            D20:'D20',D21:'D21',
        E1:'E1',E:'E2',                                                                                                                                                            E20:'E20',E21:'E21',
        F1:'F1',F:'F2',                                                                                                                                                            F20:'F20',F21:'F21',
        G1:'G1',G:'G2',                                                                                                                                                            G20:'G20',G21:'G21',
        H1:'H1',H:'H2',                                                                                                                                                            H20:'H20',H21:'H21',
        J1:'J1',J:'J2',                                                                                                                                                            J20:'J20',J21:'J21',
        K1:'K1',K:'K2',                                                                                                                                                            K20:'K20',K21:'K21',
        L1:'L1',L:'L2',                                                                                                                                                            L20:'L20',L21:'L21',
        M1:'M1',M:'M2',M3:'M3',M4:'M4',M5:'M5',M6:'M6',M7:'M7',M8:'M8',M9:'M9',M10:'M10',M11:'M11',M12:'M12',M13:'M13',M14:'M14',M15:'M15',M16:'M16',M17:'M17',M18:'M18',M19:'M19',M20:'M20',M21:'M21',
        N1:'N1',N:'N2',N3:'N3',N4:'N4',N5:'N5',N6:'N6',N7:'N7',N8:'N8',N9:'N9',N10:'N10',N11:'N11',N12:'N12',N13:'N13',N14:'N14',N15:'N15',N16:'N16',N17:'N17',N18:'N18',N19:'N19',N20:'N20',N21:'N21',
    }
}
//..............................................................................

//..............................................................................
const stringsElectronics =
{
    commBLE        : 'BLE',
    commWiFI       : 'WiFi',
    commEthernet   : 'Ethernet',
    prefixItem     : 'PCBA-',
    prefixDevice   : 'mesh-',
    prefixBB       : 'BB',
    prefixCM       : 'cm',
    prefixMB       : 'MB',
    prefixMCU      : 'MCU',

    get prefixDeviceCM   () {return this.prefixDevice + this.prefixCM                    },
    get prefixItemBB     () {return this.prefixItem   + this.prefixBB                    },
    get prefixItemMB     () {return this.prefixItem   + this.prefixMB                    },
    get prefixMbBLE      () {return this.prefixItem   + this.prefixMB + this.commBLE     },
    get prefixMbWiFi     () {return this.prefixItem   + this.prefixMB + this.commWiFI    },
    get prefixMbEthernet () {return this.prefixItem   + this.prefixMB + this.commEthernet},
    get prefixBbBLE      () {return this.prefixItem   + this.prefixBB + this.commBLE     },
    get prefixBbWiFi     () {return this.prefixItem   + this.prefixBB + this.commWiFI    },
    get prefixBbEthernet () {return this.prefixItem   + this.prefixBB + this.commEthernet},
};
//..............................................................................

//..............................................................................
const seriesMCU =
[
    {id: 'bbBLE'     , stringPrefix : stringsElectronics.prefixBB + '20'},
    {id: 'bbWiFi'    , stringPrefix : stringsElectronics.prefixBB + '30'},
    {id: 'bbEthernet', stringPrefix : stringsElectronics.prefixBB + '40'},
    {id: 'mbBLE'     , stringPrefix : stringsElectronics.prefixMB + '20'},
    {id: 'mbWiFi'    , stringPrefix : stringsElectronics.prefixMB + '30'},
    {id: 'mbEthernet', stringPrefix : stringsElectronics.prefixMB + '40'},
];

const specialNetNames =
{
    match:
    [
        "GND"    ,
        "3V3"    ,
        "3V3_IN" ,
        "3V3_ISO",
        "3V3_OUT",
        "5V0"    ,
        "5V"     ,
        "5V0_IN" ,
        "5V0_OUT",
        "5V_IN"  ,
        "5V_OUT" ,
        "9V_OUT" ,
        "VA_IN"  ,
        "VB_IN"  ,
        "VDC"    ,
        "VBAT"   ,
        "C9/WKUP"
    ],
    wildcard:
    [
        'GND',
        'MISO',
        'MOSI',
        'SCLK',
        'SCL',
        'SDA',
        'SWDIO',
        'SWCLK',
        'WAKE',
        'CS_N',
    ],
    netsSPI:
    [
        'MISO',
        'MOSI',
        'SCLK',
    ],
    netsI2C:
    [
        'SCL',
        'SDA',
    ]
};
//..............................................................................

//..............................................................................
function isMCU(id)
{
    var checkIDString = id.substring(0, 4);

    for (var i = 0; i < Object.keys(seriesMCU).length; i++)
    {
        if (checkIDString === seriesMCU[Object.keys(seriesMCU)[i]].stringPrefix)
        {
            return true;
        }
    }

    return  false;
}
//..............................................................................

//..............................................................................
function getMasterNetName(netName)
{
    for (var i = 0; i < specialNetNames.netsSPI.length; i++)
    {
        if (netName.indexOf(specialNetNames.netsSPI[i]) > -1)
        {
            return netName + '@M';
        }
    }

    return netName;
}
//..............................................................................

//..............................................................................
function isMaster(boardID)
{
    for (var i = 0; i < seriesMCU.length; i++)
    {
        if (boardID.indexOf(seriesMCU[i]) > -1)
        {
            return true;
        }
    }

    return false;
}
//..............................................................................

//..............................................................................
function isSpecialNetName(netName)
{
    if (netName.length < 1) return false;

    if (isInArray(netName, specialNetNames.match))
    {
        return true;
    }

    for (var i = 0; i < specialNetNames.wildcard.length; i++)
    {
        if (netName.indexOf(specialNetNames.wildcard[i]) > -1)
        {
            return true;
        }
    }

    return false;
}
//..............................................................................

//..............................................................................

addProperties(cxq.meshDocGen,
{
    stringsElectronics,
    isSpecialNetName,
    getMasterNetName,
    isMCU,
    isMaster,
    mbDetails,
});
