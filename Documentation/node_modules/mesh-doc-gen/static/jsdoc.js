//..............................................................................

//..............................................................................

const {fs,path} = cxq;

const
{
    loadTextFileIntoArray,
    writeFileToDisk,
    directoryNames,
    urls,
    stringsUtil,
} = cxq.meshDocGen;

//..............................................................................
const summaryPrefixEn              = '@description' + stringsUtil.newLine + '<b>language_en</b>' + stringsUtil.newLine + '### Summary:' + stringsUtil.newLine + 'TODO: Write summary: `';
const commentDescriptionPrefixEn   = '### Description: ' + stringsUtil.newLine + 'TODO: Write description: `';
const parameterDescriptionInfixEn  = ' TODO: Write description: ';
const seeAlsoLinkPrefixEn          = '### See Also: ' + stringsUtil.newLine + '{@link http://www.google.com An example link}';
const codeExampleTitleEn           = '**Code Example**';
const codeExampleDescriptionEn     = 'This is a simple code example';
const codeContentPrefixEn          = '    console.log("TODO: Write a simple example: ';
//..............................................................................

//..............................................................................
const summaryPrefixZh              = '@description' + stringsUtil.newLine + '<b>language_zh</b>' + stringsUtil.newLine + '### 总结:' + stringsUtil.newLine + '写一段总结 `';
const commentDescriptionPrefixZh   = '### 描述: ' + stringsUtil.newLine + 'TODO: 写一段描述 `';
const parameterDescriptionInfixZh  = ' TODO: 写一段描述 ';
const seeAlsoLinkPrefixZh          = '### 参见: ' + stringsUtil.newLine + '{@link http://www.baidu.com 示例链接}';
const codeExampleTitleZh           = '**范例源代码**';
const codeExampleDescriptionZh     = '这是一段简单的代码示例';
const codeContentPrefixZh          = '    console.log("TODO: 写一段简单的例子: ';
//..............................................................................

//..............................................................................
const summaryPrefixIntellisenseEn             = '<b>Summary:</b>' + stringsUtil.newLine + '<b>language_en</b>' + stringsUtil.newLine + 'Summary for: ';
const commentDescriptionPrefixIntellisenseEn  = '<b>Description:</b>' + stringsUtil.newLine + 'Description for: ';
const parameterDescriptionInfixIntellisenseEn = ' @todo write description for: ';
const seeAlsoLinkPrefixIntellisenseEn         = '<b>See also:</b>' + stringsUtil.newLine + '{@link ' + urls.seeAlsoEn;
const seeAlsoLinkSuffixIntellisenseEn         = ' Online Help}';
const codeExampleTitleIntellisenseEn          = '<b>Code Example</b>';
//..............................................................................

//..............................................................................
const summaryPrefixIntellisenseZh             = '<b>概括:</b>' + stringsUtil.newLine +  '<b>language_zh</b>' + stringsUtil.newLine + '写一段简单的概括: ';
const commentDescriptionPrefixIntellisenseZh  = '<b>描述:</b>' + stringsUtil.newLine + '写一段简单的描述: ';
const parameterDescriptionInfixIntellisenseZh = ' TODO: 写一段简单的概括: ';
const seeAlsoLinkPrefixIntellisenseZh         = '<b>范例网络链接:</b>' + stringsUtil.newLine + '{@link ' + urls.seeAlsoZh;
const seeAlsoLinkSuffixIntellisenseZh         = ' 联机帮助中}';
const codeExampleTitleIntellisenseZh          = '<b>范例源代码</b>';
//..............................................................................

//..............................................................................
const codeFormatStartIntellisense             = '<pre>';
const codeFormatFinishIntellisense            = '</pre>';
//..............................................................................

//..............................................................................
const blankLine                  = ' ';
const codeContentFinish          = '}';
const codeContentStart           = '{';
const codeContentSuffix          = '")';
const codeDeclarationPrefix      = 'function ';
const codeFormat                 = '```';
const commentBlockEnd            = ' */';
const commentBlockStart          = '/**';
const constPrefix                = 'const ';
const contentEnd                 = '};';
const contentStart               = '{';
const curlyBracketsClose         = '}';
const curlyBracketsOpen          = '{';
const equalsSubString            = ' =';
const memberOfPrefix             = '@memberof ';
const methodDeclarationInfix     = ' : function ';
const methodDeclarationSuffix    = '{},';
const moduleExports              = 'module.exports = ';
const namespaceDescriptionPrefixEn = '### Description: ' + stringsUtil.newLine + 'TODO: Write namespace description: `';
const namespaceDescriptionPrefixZh = '### 概括: '        + stringsUtil.newLine + 'TODO: 写一段的概括: `';
const namespacePrefix            = '@namespace ';
const oneDoubleQuote             = '"';
const parameterPrefix            = '@param ';
const parameterTypeSuffix        = '} ';
const propertyDeclarationSuffix  = " : '',";
const propertyInfix              = '} ';
const propertyPrefix             = '@property {';
const returnsPrefix              = '@returns {';
const roundBrackets              = '()';
const roundBracketsClose         = ')';
const roundBracketsOpen          = '(';
const semiColon                  = ';';
const singleBackTick             = '`';
const singleSpace                = ' ';
const typeDefPrefix              = '@typedef {object} ';
const typePrefix                 = '@type ';
//..............................................................................

//..............................................................................

var exported  =
{
    blankLine,
    codeContentFinish,
    codeContentPrefixEn,
    codeContentPrefixZh,
    codeContentStart,
    codeContentSuffix,
    codeDeclarationPrefix,
    codeExampleDescriptionEn,
    codeExampleDescriptionZh,
    codeExampleTitleEn,
    codeExampleTitleIntellisenseEn,
    codeExampleTitleIntellisenseZh,
    codeExampleTitleZh,
    codeFormat,
    codeFormatFinishIntellisense,
    codeFormatStartIntellisense,
    commentBlockEnd,
    commentBlockStart,
    commentDescriptionPrefixEn,
    commentDescriptionPrefixIntellisenseEn,
    commentDescriptionPrefixIntellisenseZh,
    commentDescriptionPrefixZh,
    constPrefix,
    contentEnd,
    contentStart,
    curlyBracketsClose,
    curlyBracketsOpen,
    equalsSubString,
    memberOfPrefix,
    methodDeclarationInfix,
    methodDeclarationSuffix,
    moduleExports,
    namespaceDescriptionPrefixEn,
    namespacePrefix,
    oneDoubleQuote,
    parameterDescriptionInfixEn,
    parameterDescriptionInfixIntellisenseEn ,
    parameterDescriptionInfixIntellisenseZh,
    parameterDescriptionInfixZh,
    parameterPrefix,
    parameterTypeSuffix,
    propertyDeclarationSuffix,
    propertyInfix,
    propertyPrefix,
    returnsPrefix,
    roundBrackets,
    roundBracketsClose,
    roundBracketsOpen,
    seeAlsoLinkPrefixEn,
    seeAlsoLinkPrefixIntellisenseEn,
    seeAlsoLinkPrefixIntellisenseZh,
    seeAlsoLinkPrefixZh,
    seeAlsoLinkSuffixIntellisenseEn,
    seeAlsoLinkSuffixIntellisenseZh,
    semiColon,
    singleBackTick,
    singleSpace,
    summaryPrefixEn,
    summaryPrefixIntellisenseEn,
    summaryPrefixIntellisenseZh,
    summaryPrefixZh,
    typeDefPrefix,
    typePrefix,
};
//..............................................................................

//..............................................................................

module.exports = exported;
