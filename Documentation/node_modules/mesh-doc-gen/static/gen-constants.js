//..............................................................................
const os = require('os');

const {util} = cxq;
const {addProperties} = util;
//..............................................................................

//..............................................................................
const stringsError =
{
    linkNotFound   : 'linkNotFound',
    valueNotFound  : 'valueNotFound',
    suffixNotFound : 'suffixNotFound',
};
//..............................................................................

//..............................................................................
const stringsTemplate =
{
    familyName    : '{{family-name}}',
    id            : '{{id}}',
    modelLinks    : '{{model-links}}',
    overviewPower : '{{overview-powering-edge-devices}}',
    idDisplay     : '{{id-display}}',
    sheetName     : '{{sheet-name}}',
    description   : '{{description}}',
    descriptionEn : '{{description_en}}',
    descriptionZh : '{{description_zh}}',
    heatPadX      : '{{heat-pad-x}}',
    heatPadY      : '{{heat-pad-y}}',
};
//..............................................................................

//..............................................................................
const stringsUtil =
{
    newLine            : os.EOL,
    replaceDirPath     : '%%replace-dir-path%%',
    //separator          : '--||||--',
    //unique             : '__xx__',
    todo               : 'TODO',
    unitsPixels        : 'px',
};
//..............................................................................

//..............................................................................
const languages =
{
    english: {id : 'language_en', name : 'english', nameFormal : 'English', suffix: '-en', },
    chinese: {id : 'language_zh', name : 'chinese', nameFormal : 'Chinese', suffix: '-zh', },
};
//..............................................................................

//..............................................................................
const contentLanguages =
{
    languageEn : {suffix : '-en', string : 'languageEn', stringJS  : 'language_en'},
    languageZh : {suffix : '-zh', string : 'languageZh', stringJS  : 'language_zh'},
};
//..............................................................................

//..............................................................................
const directoryNames =
{
    analysis           : '/analysis',
    api                : '/api',
    apiDocEn           : '/api-doc' + languages.english.suffix,
    apiDocZh           : '/api-doc' + languages.chinese.suffix,
    content            : '/content',
    css                : '/css',
    deviceFamilies     : 'device-families',
    deviceModels       : 'device-models',
    doc                : '/doc',
    docsGeneral        : '/docs',
    git                : '.git',
    helpEn             : '/help' + languages.english.suffix,
    helpJS             : '/help-js',
    helpZh             : '/help' + languages.chinese.suffix,
    html               : '/html',
    images             : '/images',
    intellisense       : '/intellisense',
    items              : 'items',
    js                 : '/js',
    meshJSON           : '../mesh-json',
    moduleDefs         :'module-defs',
    objects            : '/objects',
    original           : '/original',
    outputAnalysis     : '../output-analysis',
    outputFinal        : '../output-final',
    outputIntermediate : '../output-intermediate',
    outputReports      : '../output-reports',
    outputTemp         : '../output-temp',
    partials           : '/partials',
    productDoc         : '/product-doc',
    productSource      : '../../../doc',
    source             : '../source',
    sourceAPI          : '/source-doc-api',
    sourceIntellisense : '/source-intellisense',
    templates          : '../../../content-source/templates',
    toc                : '/toc',
    yamlObjects        : '../../../yaml-objects',

    get outputFinalHTML   () {return this.outputFinal      + this.html               },
    get outputProductDoc  () {return this.outputFinalHTML  + this.productDoc         },
    get outputProductDocEn() {return this.outputProductDoc + languages.english.suffix},
    get outputProductDocZh() {return this.outputProductDoc + languages.chinese.suffix},
    get intellisenseEn    () {return this.intellisense     + languages.english.suffix},
    get intellisenseZh    () {return this.intellisense     + languages.chinese.suffix},
};
//..............................................................................

//..............................................................................
const fileExtensions =
{
    css       : '.css',
    gif       : '.gif',
    html      : '.html',
    jpg       : '.jpg',
    js        : '.js',
    json      : '.json',
    markdown  : '.md',
    png       : '.png',
    svg       : '.svg',
    schematic : '.SchDoc',
    yaml      : '.yaml',
};
//..............................................................................

//..............................................................................
const delimiters  =
{
    jsDocEnd   : ' */',
    jsDocStart : '/**',
};
//..............................................................................

//..............................................................................
const markdownHeadings =
{
    md1 : '# ',
    md2 : '## ',
    md3 : '### ',
    md4 : '#### ',
    md5 : '##### ',
    md6 : '###### ',
};
//..............................................................................

//..............................................................................
const htmlHeadings =
{
    hd1 : { open : '<h1>', close : '</h1>'},
    hd2 : { open : '<h2>', close : '</h2>'},
    hd3 : { open : '<h3>', close : '</h3>'},
    hd4 : { open : '<h4>', close : '</h4>'},
    hd5 : { open : '<h5>', close : '</h5>'},
    hd6 : { open : '<h6>', close : '</h6>'},
};
//..............................................................................

//..............................................................................
const fileNames =
{
    apiStructure            : 'apiStructure.txt',
    blockDiagram            : '-block-diagram',
    cssCodeHighlight        : 'atelier-sulphurpool-dark.css',
    cssGithub               : 'github-markdown.min.css',
    cssMain                 : 'main.css',
    contentJSON             : 'content-body.body',
    dataWarningsReport      : 'data-warnings-reports.yaml',
    description             : '-description-',
    deviceSheet             : '-device-sheet',
    diagram                 : '-diagram',
    docPagesContentParsed   : 'doc-pages-content-parsed.json',
    docPagesMarkdownParsed  : 'doc-pages-markdown-parsed.json',
    docPagesUnparsed        : 'doc-pages-unparsed.json',
    errorsReport            : 'error-report.json',
    featureList             : '-feature-list.json',
    formFactor              : '-form-factor',
    generatedBodyAPI        : 'content-body.md',
    generatedTocAPI         : 'content-toc.md',
    headlineImage           : '-headline-image',
    images                  : 'images',
    index                   : 'index',
    infixDevice             : 'device-models',
    infixFamily             : 'device-families',
    infixGeneral            : 'general',
    infixImages             : 'images',
    infixItem               : 'items',
    infixItemClass          : 'item-classes',
    infixTOC                : 'toc',
    jSCodeHighlight         : 'highlight.site.pack.js',
    namespacesJSON          : 'namespaces.json',
    pinDiagram              : '-pin-diagram',
    pinTable                : '-pin-table',
    productDataObjectJSON   : 'mesh-object-data.json',
    productDocPagesJSON     : 'doc-pages.json',
    productDocStructureJSON : 'product-doc-structure.json',
    readme                  : 'readme',
    reservedWordList        : 'reservedWords.txt',
    toc                     : 'toc.md',
    tocEn                   : 'toc' + languages.english.suffix,
    tocJSON                 : 'content-toc.toc',
    tocZh                   : 'toc' + languages.chinese.suffix,
    todoReport              : 'todo-report.json',
    usage                   : '-usage-',
};
//..............................................................................

//..............................................................................
const fileTypes =
{
    development : ['.cpp','.js','.h','.bin','.hex','.git','.JS'],
    standard    : ['.md','html','.exe','.xml','.pdf','.crt','.json'],
    images      : ['.png','.jpg','.gif','.svg'],
    js          : '*.js',
    md          : '*.md',
    svg         : '*.svg',
    png         : '*.png',
    json        : '*.json',
    html        : '*.html',
};
//..............................................................................

//..............................................................................
const commentLines =
{
    mD  : '<!----------------------------------------------------------------------------->',
    svg : '<!-- ............................................................... -->',
};
//..............................................................................

//..............................................................................
const urls =
{
    seeAlso   : 'http://localhost:63342/mesh-doc/content-generated/html/help-en/index.html#',
    seeAlsoEn : 'http://localhost:63342/mesh-doc/content-generated/html/help-en/index.html#',
    seeAlsoZh : 'http://localhost:63342/mesh-doc/content-generated/html/help-zh/index.html#',
};
//..............................................................................

//..............................................................................
const partials =
{
    footerAPI        : 'api-footer.html',
    footerProductDoc : 'product-doc-footer.html',
    headerAPI        : 'api-header.html',
    headerProductDoc : 'product-doc-header.html',
};
//..............................................................................

//..............................................................................
const sides =
{
    bottom : 'bottom',
    top    : 'top',
    left   : 'left',
    right  : 'right',
};
//..............................................................................

//..............................................................................

const filenameLanguageExtensions =
{
    basicEn      : languages.english.suffix,
    basicZh      : languages.chinese.suffix,

    productsEn   : '-products'    + languages.english.suffix,
    productsZh   : '-products'    + languages.chinese.suffix,
    familiesEn   : '-families'    + languages.english.suffix,
    familiesZh   : '-families'    + languages.chinese.suffix,
    generalEn    : '-general'     + languages.english.suffix,
    generalZh    : '-general'     + languages.chinese.suffix,
    imagesEn     : '-img'         + languages.english.suffix,
    imagesZh     : '-img'         + languages.chinese.suffix,
    sheetsEn     : '-sheet'       + languages.english.suffix,
    sheetsZh     : '-sheet'       + languages.chinese.suffix,
    diagramsEn   : '-diagram'     + languages.english.suffix,
    diagramsZh   : '-diagram'     + languages.chinese.suffix,
    formFactorEn : '-form-factor' + languages.english.suffix,
    formFactorZh : '-form-factor' + languages.chinese.suffix,
};
//..............................................................................

//..............................................................................

const stringsPinTableMD =
{
    markdownPinTableHeaderEn : '|ID |Pin Type | Description| Pins',
    markdownPinTableHeaderZh : '|ID |插脚类型  |描述         |  管脚号码',
    markdownPinTableSplitter : '|---|---|---|---',
};

//..............................................................................

//..............................................................................
const svgClassNames =
{
   originMarker   :  'origin-marker',
   hotSpot        :  'hot-spot',
   noNet          :  'no-net',
   elementsNet    :  'elements-net',
   diagramElement :  'diagram-element',
};
//..............................................................................

//..............................................................................
const svgClassTags =
{
   originMarker   : 'class="' + svgClassNames.originMarker   + '"',
   hotSpot        : 'class="' + svgClassNames.hotSpot        + '"',
   noNet          : 'class="' + svgClassNames.noNet          + '"',
   elementsNet    : 'class="' + svgClassNames.elementsNet    + '"',
   diagramElement : 'class="' + svgClassNames.diagramElement + '"',
};
//..............................................................................

//..............................................................................
const sensorHeadings =
{
    accelerometer     : {languageEn: "Accelerometer",                          languageZh: "加速计"},
    accelerometer_gyro: {languageEn: "Accelerometer & Gyro",                   languageZh: "加速度计和计陀螺仪"},
    ambient_light     : {languageEn: "Ambient Light Sensor",                   languageZh: "环境光传感器"},
    co                : {languageEn: "CO Sensor",                              languageZh: "一氧化碳传感器"},
    gesture           : {languageEn: "Gesture Sensor",                         languageZh: "姿态传感器"},
    humidity          : {languageEn: "Humidity Sensor",                        languageZh: "湿度传感器"},
    light             : {languageEn: "Light Sensor",                           languageZh: "光传感器"},
    magnetometer      : {languageEn: "Magnetometer",                           languageZh: "磁强计"},
    motion            : {languageEn: "Motion Sensor",                          languageZh: "运动传感器"},
    pir               : {languageEn: "PIR (Passive Infra-Red) Sensor",         languageZh: "PIR(被动式红外)传感器"},
    pm25              : {languageEn: "PM2.5 Sensor",                           languageZh: "PM2.5传感器"},
    pressure          : {languageEn: "Pressure Sensor",                        languageZh: "气压传感器"},
    proximity         : {languageEn: "Proximity Sensor",                       languageZh: "接近传感器"},
    rfid              : {languageEn: "RFID Sensor",                            languageZh: "RFID传感器"},
    temperature       : {languageEn: "Temperature Sensor",                     languageZh: "温度传感器"},
    voc               : {languageEn: "VOC (Volatile Organic Compound) Sensor", languageZh: "VOC(挥发性有机物)传感器"},
};
//..............................................................................

//..............................................................................
const standardPageSections =
{
    features         : {order: 1 , heading_en: "Features"          , heading_zh: "特点"                                       },
    description      : {order: 2 , heading_en: "Description"       , heading_zh: "描述"                                       },
    overview         : {order: 3 , heading_en: "Overview"          , heading_zh: "综述"                                       },
    blockDiagram     : {order: 4 , heading_en: "Block Diagram"     , heading_zh: "方块图"                          },
    deviceSheet      : {order: 5 , heading_en: "Device Sheet"      , heading_zh: "线路设计页"},
    hardwareDiagram  : {order: 6 , heading_en: "Hardware Diagram"  , heading_zh: "硬件框图"             },
    usage            : {order: 7 , heading_en: "Usage"             , heading_zh: "用法"                                       },
    sensorInformation: {order: 7 , heading_en: "Sensor Information", heading_zh: "传感器信息"},
    pinTable         : {order: 8 , heading_en: "Pin Table"         , heading_zh: "管脚列表"             },
    pinTables        : {order: 9 , heading_en: "Pin Tables"        , heading_zh: "管脚列表"             },
    pinDiagram       : {order: 10, heading_en: "Pin Diagram"       , heading_zh: "管脚框图"             },
    pinDiagrams      : {order: 11, heading_en: "Pin Diagrams"      , heading_zh: "管脚框图"             },
    formFactor       : {order: 12, heading_en: "Form Factor"       , heading_zh: "形因数"                          },
    oemFeatures      : {order: 13, heading_en: "OEM Features"      , heading_zh: "OEM特点"                  },
    models           : {order: 14, heading_en: "Models"            , heading_zh: "模型"                                       },
    imagePages       : {order: 15, heading_en: "Images"            , heading_zh: "图片"                                       },
    deviceFamily     : {order: 16, heading_en: "Device Family"     , heading_zh: "设备家庭"             },
};
//..............................................................................

//..............................................................................

addProperties(cxq.meshDocGen,
{
    standardPageSections,
    contentLanguages,
    stringsPinTableMD,
    sensorHeadings,
    svgClassNames,
    svgClassTags,
    commentLines,
    delimiters,
    directoryNames,
    fileExtensions,
    fileNames,
    fileTypes,
    filenameLanguageExtensions,
    htmlHeadings,
    languages,
    markdownHeadings,
    partials,
    sides,
    stringsError,
    stringsTemplate,
    stringsUtil,
    urls,
});
