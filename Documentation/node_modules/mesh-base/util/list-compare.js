//..............................................................................
const {util} = cxq;
//..............................................................................

//..............................................................................
const
{
    addProperties,
    objectToArray,
    processList
} = util;
//..............................................................................

//..............................................................................
function compareLists(oldList, newList, key, compareFn)
{
    log.info('compareLists:', propertyCount(oldList), propertyCount(newList), 'key:'+key);

    var newEntityMap = {};
    var oldEntityMap = {};
    var inserts      = {};
    var removes      = {};
    var updates      = {};

    processList(oldList, function(entity){oldEntityMap[entity[key]] = entity;});
    processList(newList, function(entity){newEntityMap[entity[key]] = entity;});

    //Find new or updated entities
    processList(newEntityMap, function(newEntity, key)
    {
        var oldEntity = oldEntityMap[key];
        if (oldEntity)
        {
            if (!compareFn || !compareFn(oldEntity, newEntity))
                 updates[key] = newEntity;
        }
        else
        {
            inserts[key] = newEntity;
        }
    });

    //Find redundant entities
    processList(oldEntityMap, function(oldEntity, key)
    {
        var newEntity = newEntityMap[key];
        if (!newEntity)
            removes[key] = oldEntity;
    });

    inserts = objectToArray(inserts);
    updates = objectToArray(updates);
    removes = objectToArray(removes);

    return ({inserts, updates, removes});
}
//..............................................................................

//..............................................................................
function updateCollectionFromList(newList)
{
    function same(e1, e2)
    {
        return (e1.version === e2.version);
    }
    function insertEntity(entity){}
    function updateEntity(entity){}
    function removeEntity(entity){}
    function all(){}
    ////////////////////////////////////////////////////////////////////////////
    var lists = compareLists(all(), newList, 'id', same);
    processList(lists.inserts, insertEntity);
    processList(lists.updates, updateEntity);
    processList(lists.removes, removeEntity);
}
//..............................................................................

addProperties(util,
{
    compareLists
});
