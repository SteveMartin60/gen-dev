//..............................................................................
const {logger, makeEventEmitter, util} = cxq;
//..............................................................................

//..............................................................................
const {addProperties, wait} = util;
//..............................................................................

//..............................................................................
const log = logger('shutdown-handler');
log.setLevel('info');
//..............................................................................

//..............................................................................
const eventTypes =
{
    ignoreSystemError: {id:'ignoreSystemError', description_en : 'Ignoring System Error'},
    shutdownInitiate : {id:'shutdownInitiate' , description_en : 'Initiating Shutdown'  },
    shutdownExecute  : {id:'shutdownExecute'  , description_en : 'Executing Shutdown'   }
};
//..............................................................................
const exceptionModes =
{
    none            :'none',
    exitProcess     :'exit',  //This is the default, but actual delays for 1000ms before it shuts down
    ignore          :'ignore',
    delayedShutdown :'delayedShutdown',
    orderedShutdown :'orderedShutdown'
};
let exceptionMode = exceptionModes.none;
//..............................................................................

//..............................................................................
function emitEvent(event, secondary)
{
    const info =
    {
        id             : event.id,
        description_en : event.description_en
    };
    if (secondary) info.secondary = secondary;

    log.error('ShutdownHandler Event:', info);
}
//..............................................................................

//..............................................................................
function killProcess()
{
    log.error('#### Executing Forced Shutdown Now ####');
    process.exit();
}
//..............................................................................

//..............................................................................
function delayedShutdown(ms)
{
    const event = eventTypes.shutdownInitiate;
    const s     = 'Process Shutdown in ' + ms + ' milliseconds';
    emitEvent(event, s);
    wait(ms).then(killProcess);
}
//..............................................................................

//..............................................................................
function orderedShutdown()
{
    const ms = 10000;
    log.error('Begin ordered process shutdown');
    const event = eventTypes.shutdownInitiate;
    const s     = 'Process Shutdown in ' + ms + ' milliseconds';
    emitEvent(event, s);
    wait(ms).then(killProcess);
}
//..............................................................................

//..............................................................................
function UncaughtExceptionHandler(err)
{
    //a= b.c
    //..........................................................................
    function ignoreException()
    {
        const event = eventTypes.ignoreSystemError;
        emitEvent(event);
    }
    ////////////////////////////////////////////////////////////////////////////
    //log.error('Unhandled Exception:', err.stack);

         if (exceptionMode == exceptionModes.ignore         ) ignoreException();
    else if (exceptionMode == exceptionModes.orderedShutdown) orderedShutdown();
    else if (exceptionMode == exceptionModes.delayedShutdown) delayedShutdown(3000);
    else                                                      delayedShutdown(1000);
}
//..............................................................................

//..............................................................................
function setExceptionMode(mode)
{
    if (mode)
        exceptionMode = mode;
}
//..............................................................................

//..............................................................................
function ignoreTopExceptions()
{
    setExceptionMode(exceptionModes.ignore);
}
//..............................................................................

//..............................................................................
addProperties(util, {ignoreTopExceptions});
//..............................................................................

