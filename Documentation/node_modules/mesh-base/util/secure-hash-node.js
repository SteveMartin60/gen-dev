const crypto     = require('crypto');
const folderHash = require('folder-hash');
//..............................................................................
const {fs, util} = cxq;
//..............................................................................

//..............................................................................
const
{
    addProperties,
    getCanonicalJson,
    isString,
    isBuffer
} = util;
//..............................................................................

//..............................................................................
// Return as standard Javascript array of bytes
//..............................................................................
function stringToSha256(s)
{
    const hash = crypto.createHash('sha256');
    hash.update(s,'utf8');
    return hash.digest();
}
//..............................................................................

//..............................................................................
// Return as standard Javascript array of bytes
//..............................................................................
function bufferToSha256(buf)
{
    const hash = crypto.createHash('sha256');
    hash.update(buf);
    return hash.digest();
}
//..............................................................................

//..............................................................................
// Return as hex string
//..............................................................................
function stringToSha256Hex(s)
{
    return stringToSha256(s).toString('hex');
}
//..............................................................................

//..............................................................................
// Return as hex string
//..............................................................................
function bufferToSha256Hex(buf)
{
    return bufferToSha256(buf).toString('hex');
}
//..............................................................................

//..............................................................................
// Return as standard Javascript array of bytes
//..............................................................................
function jsonToSha256(obj)
{
    const hash = crypto.createHash('sha256');
    hash.update(getCanonicalJson(obj));

    const buf    = hash.digest();
    const result = Array.prototype.slice.call(buf, 0);
 // console.log('Buffer.Hex   :', result.toString('hex'));
 // console.log('Buffer.Array :', result);
 // console.log();

    return result;
}
//..............................................................................

//..............................................................................
// Return as hex string
//..............................................................................
function jsonToSha256Hex(obj)
{
    const hash = crypto.createHash('sha256');
    hash.update(getCanonicalJson(obj));
    return hash.digest().toString('hex');
}
//..............................................................................

//..............................................................................
function fileToSha256Hex(file, callback)
{
    if (!callback) return;
    
    const hash = crypto.createHash('sha256');
    
    if (isBuffer(file))
    {
        hash.update(file);
        callback(null, hash.digest().toString('hex'));
    }
    else    
    if (isString(file))
    {
        const readStream = fs.createReadStream(file);

        const onData = function(chunk)
        {
            hash.update(chunk);  
        }

        const onEnd = function()
        {
            callback(null, hash.digest().toString('hex'));
        }

        const onError = function(err)
        {
            callback(err);
        }

        readStream
            .on('data' , onData)
            .on('end'  , onEnd)
            .on('error', onError);
    }    
}
//..............................................................................

//..............................................................................
function folderToSha256Hex(folder, callback)
{
    const options =
    {
        algo     : 'sha256',
        encoding : 'hex',
        folders  : {ignoreRootName : true},
        files    : {ignoreRootName : true}
    };

    folderHash.hashElement(folder, options, function(error, data)
    {
        if (error)
        {
            console.error('ERROR:folderToSha256Hex:', error);
            callback(error);
        }
        else
        {
         // console.log('folderToSha256Hex:', folder);
         // console.log('folderToSha256Hex:', data.hash);
         // console.log(data.toString());
            callback(null, data.hash);
        }
    });
}
//..............................................................................

const exported =
{
    stringToSha256,
    stringToSha256Hex,
    jsonToSha256,
    jsonToSha256Hex,
    fileToSha256Hex,
    bufferToSha256Hex,
    folderToSha256Hex,
};

addProperties(util,exported);
module.exports = exported;
