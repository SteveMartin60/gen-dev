//..............................................................................
const {util} = cxq;
//..............................................................................

//..............................................................................
const {isDefined, addProperties, functionAsProperty_ReadOnly} = util;
//..............................................................................

//..............................................................................
var language = 'en';
//..............................................................................

//..............................................................................
function getLanguageDeprecated()
{
    console.warn('cxq.language is deprecated. Use cxq.util.getLanguage instead');
    return getLanguage();
}
//..............................................................................

//..............................................................................
function getLanguage()
{
    return language;
}
//..............................................................................

//..............................................................................
function setLanguage(newLanguage)
{
    if (isDefined(newLanguage))
        language = newLanguage;
}
//..............................................................................

//..............................................................................
function setFieldByLanguage(language, target, fieldName, source1, source2)
{
    var defaultLanguage       = 'en';
    var fieldNameWithLanguage = fieldName + '_' + language;

    if ((isDefined(source1[fieldNameWithLanguage])) && (source1[fieldNameWithLanguage] != ''))
    {
        target[fieldName] = source1[fieldNameWithLanguage];
    }
    else
    if (isDefined(source2))
    {
        if ((isDefined(source2[fieldNameWithLanguage])) && (source2[fieldNameWithLanguage] != ''))
            target[fieldName] = source2[fieldNameWithLanguage];
    }

    if (!isDefined(target[fieldName]) || (target[fieldName] == ''))
        if (defaultLanguage != language)
            setFieldByLanguage(defaultLanguage, target, fieldName, source1, source2);
}
//..............................................................................

//..............................................................................
function getLocalizedProperty(obj,propertyName)
{
    if (!obj) return '';

    var language = getLanguage();
    var s = obj[propertyName];
    if (!s) s = obj[propertyName+ '_' + language];
    if (!s) s = obj[propertyName+ '_en'];
    return s || null;
}
//..............................................................................

//..............................................................................
function setCaptionAndDescriptionByLanguage(language, target, source1, source2 )
{
    language = getLanguage(); // TODO - This will always overide the first param. Sounds like a bug - Leo
    setFieldByLanguage(language, target, 'caption'    , source1, source2);
    setFieldByLanguage(language, target, 'description', source1, source2);
}
//..............................................................................

//..............................................................................
function localizePropertyName(field)
{
    return field + '_' + language;
}
//..............................................................................

//..............................................................................
function localizePropertyValue(obj, prop)
{
    return obj[localizePropertyName(prop)];
}
//..............................................................................

addProperties(util,
{
    getLanguage,
    setLanguage,
    setFieldByLanguage,
    getLocalizedProperty,
    setCaptionAndDescriptionByLanguage,
    localizePropertyName,
    localizePropertyValue
});

functionAsProperty_ReadOnly(cxq, getLanguageDeprecated, 'language'); // TODO - Deprecate. use cxq.util.getLanguage instead - Leo

