//..............................................................................
var processArg = function()
{
    var Getopt  = require('node-getopt');

    var commandLineDef =
        [
            ['f', 'files=ARG+'   , 'NodeJS File'      ],
            ['p', 'packages=ARG+', 'Mesheven Package' ],
            ['h', 'help'         , 'display this Help']
        ];

    var getopt = new Getopt(commandLineDef).bindHelp();

    getopt.setHelp
        (
            "Start a Package         : node mesh-base/mesheven -p mesh-ai \n" +
            "Start Multiple Packages : node mesh-base/mesheven -p mesh-ai -p device-agent \n" +
            "Start a JS File         : node mesh-base/mesheven -f /test.js \n" +
            "Start Multiple Files    : node mesh-base/mesheven -f /test.js -f /test.js \n"
        );
    return  getopt.parseSystem().options;
};
//..............................................................................
var processExecArgv = function()
{
    //..........................................................................
    var options = {};

    var processArgv = function (arg)
    {
        var match;
        var key;
        var value;
        if(match = arg.match(/^-{1,2}([^=]+)=(.+)/))
        {
            key   = match[1];
            value = match[2];
        }
        else
        if (match = arg.match(/^-{1,2}(\w+)/))
        {
            key   = match[1];
            value = true;
        }

        if (key)
        {
            options[key] = value;
        }
    };

    var argv = process.execArgv;
    argv.forEach(processArgv);
    return options;
};
////////////////////////////////////////////////////////////////////////

var commandLineOptions =
{
    exec: processExecArgv(),
    app : processArg()
};

cxq.commandLineOptions = commandLineOptions;

console.log('------------------------------');
console.log('MeshOS Started');
console.log('------------------------------');
console.log('Packages:', cxq.commandLineOptions.app.packages || []);
console.log('Files   :', cxq.commandLineOptions.app.files    || []);
console.log('Debug   :', cxq.commandLineOptions.exec.debug   || false);
console.log('------------------------------');