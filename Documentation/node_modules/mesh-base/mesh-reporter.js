//..............................................................................
const {logger, util} = cxq;
//..............................................................................

//..............................................................................
const
{
    addToNameSpace,
    functionAsProperty_ReadOnly,
    saveDataToJSON_DebugSync
} = util;
//..............................................................................

//..............................................................................
var log = logger('make-reporter');
log.setLevel('info');
//..............................................................................

//..............................................................................
function makeReporter()
{
    var errors   = [];
    var warnings = [];
    var infos    = [];
    //..........................................................................
    function addInfo(filename, info)
    {
        infos.push({type : 'info', filename, info});
    }
    //..........................................................................
    function addWarning(filename, info)
    {
        log.warn('Add-Warning:',filename,info);
        warnings.push({type: 'warning', filename, info});
    }
    //..........................................................................
    function addError(filename, info)
    {
        log.error('Add-Error:', filename, 'Details:', info||'');
        errors.push({error: 'warning', filename, info});
    }
    //..........................................................................
    function save(name)
    {
        saveDataToJSON_DebugSync({errors,warnings,infos}, name);
    }
    ////////////////////////////////////////////////////////////////////////////
    var publicScope =
    {
        addInfo,
        addWarning,
        addError,
        save
    };
    functionAsProperty_ReadOnly(publicScope, function(){return errors         ;}, 'errors'      );
    functionAsProperty_ReadOnly(publicScope, function(){return warnings       ;}, 'warnings'    );
    functionAsProperty_ReadOnly(publicScope, function(){return infos          ;}, 'info'        );
    functionAsProperty_ReadOnly(publicScope, function(){return errors  .length;}, 'errorCount'  );
    functionAsProperty_ReadOnly(publicScope, function(){return warnings.length;}, 'warningCount');
    functionAsProperty_ReadOnly(publicScope, function(){return infos   .length;}, 'infoCount'   );

    return publicScope;
}
//..............................................................................

addToNameSpace(makeReporter,'makeReporter');