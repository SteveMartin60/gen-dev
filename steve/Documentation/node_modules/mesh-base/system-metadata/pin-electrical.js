//..............................................................................
const {util} = cxq;
const
{
    addToNameSpace,
    processList,
    deepClone,
} = util;
//..............................................................................

//..............................................................................
const pinTypeLookup = {};
//..............................................................................

//..............................................................................
const pinElectricalTypes =
[
    { id: 'nc'             , short_en:'No-Connect', default_name:'NC' , caption_en:'No-Connect'             , description_en:'mechanical only, no electrical function.'                                                                                               , caption_zh:'无连接', description_zh:'仅限于结构，无电路功能'},
    { id: 'none'           , short_en:'None'                          , caption_en:'None'                   , description_en:'No information is available about this pin.'                                                                                            , caption_zh:'无', description_zh:'无关于此引脚的信息'},
    { id: 'reserved'       , short_en:'Reserved'                      , caption_en:'Reserved'               , description_en:'Nothing should be connected to this pin'                                                                                                , caption_zh:'预留', description_zh:'此引脚不应连接'},
    { id: 'ground'         , short_en:'GND'       , default_name:'GND', caption_en:'GND'                    , description_en:'Common electrical reference ground for power and signals.'                                                                              , caption_zh:'地', description_zh:'电源和信号的共同电路参考地'},
    { id: 'gpio'           , short_en:'GPIO'                          , caption_en:'GPIO'                   , description_en:'General purpose IO, configured to some specific pin-type by software.'                                                                  , caption_zh:'通用输入输出', description_zh:'通用输入输出，软件配置为不同引脚类型'},
    { id: 'digital_in'     , short_en:'Digital Inp'                   , caption_en:'Digital Input'          , description_en:'Logic input - recognizes the input signal as logic high or low based on some voltage threshold.'                                        , caption_zh:'数字输入', description_zh:'逻辑输入-根据门限值将输入信号识别为逻辑高或低电平'},
    { id: 'digital_out'    , short_en:'Digital Out'                   , caption_en:'Digital Output'         , description_en:'Generates a logical output that can drive high or low - normally low is zero volts and high is 3.3 volts.'                              , caption_zh:'数字输出', description_zh:'产生输出的逻辑高或低电平-通常低为0而高为3.3V'},
    { id: 'digital_io'     , short_en:'I/O'                           , caption_en:'Digital I/O'            , description_en:'Bidirectional digital signal, can act as an input or an output.'                                                                        , caption_zh:'数字输入输出', description_zh:'双向数字信号，可以作为输入和输出'},
    { id: 'analog_in'      , short_en:'Analog Inp'                    , caption_en:'Analog Input'           , description_en:'Voltage or current sense pin.'                                                                                                          , caption_zh:'模拟输入', description_zh:'电压或电流侦测管脚'},
    { id: 'analog_out'     , short_en:'Analog Out'                    , caption_en:'Analog Output'          , description_en:'Voltage or current output pin.'                                                                                                         , caption_zh:'模拟输入', description_zh:'电压或电流输出管脚'},
    { id: 'pullup'         , short_en:'Pullup'                        , caption_en:'Pullup'                 , description_en:'Digital input with an internal pullup. If the pin is not driven it will appear as logic high.'                                          , caption_zh:'上拉', description_zh:'带上拉的数字输入，如果管脚无信号驱动，缺省会为逻辑高'},
    { id: 'pulldown'       , short_en:'Pulldown'                      , caption_en:'Pulldown'               , description_en:'Digital input with an internal pulldown. If the pin is not driven it will appear as logic low.'                                         , caption_zh:'下拉', description_zh:'带下拉的数字输入，如果管脚无信号驱动，缺省会为逻辑低'},
    { id: 'pwm_output'     , short_en:'PWM'                           , caption_en:'PWM'                    , description_en:'Special type of digital output where the mark-space ratio of the output signal infers some value.'                                      , caption_zh:'脉宽调制', description_zh:'特殊的数字输出，信号占空比隐含输出数值'},
    { id: 'passive'        , short_en:'Passive'                       , caption_en:'Passive'                , description_en:'Analog signal with no specific logical direction. Normally an internal connection to passive components such as resistors, capacitors.' , caption_zh:'被动', description_zh:'无逻辑方向的模拟信号，通常为内部被动元器件连接'},
    { id: 'power_consumer' , short_en:'Power-In'                      , caption_en:'Power-Consumer'         , description_en:'Allows the component to receive power from some power provider.'                                                                        , caption_zh:'功率消耗者', description_zh:'允许元器件从其它功率提供者接收功率'},
    { id: 'power_provider' , short_en:'Power-Out'                     , caption_en:'Power-Provider'         , description_en:'Provides power for others to consume.'                                                                                                  , caption_zh:'功率提供者', description_zh:'为其它提供功率'},
    { id: 'tristate_out'   , short_en:'3-State'                       , caption_en:'Three-State'            , description_en:'Digital output that can be set to a high-impedance (disconnected) state.'                                                               , caption_zh:'三态', description_zh:'数字输出，可以被设为高阻（不连接）状态'},
    { id: 'oc_out'         , short_en:'Open-Collector'                , caption_en:'Open-Collector Output'  , description_en:'Digital output pin that can be driven low, but floats otherwise.'                                                                       , caption_zh:'集电极开路输出', description_zh:'数字输出，可以被拉低，否则浮动'},
    { id: 'oe_out'         , short_en:'Open-Emitter'                  , caption_en:'Open-Emitter Output'    , description_en:'Digital output pin that can be driven high, but floats otherwise.'                                                                      , caption_zh:'发射机开路输出', description_zh:'数字输出，可以被拉高，否则浮动'},
    { id: 'od_out'         , short_en:'Open-Drain'                    , caption_en:'Open-Drain Output'      , description_en:'Digital output pin that can be driven low, but floats otherwise.'                                                                       , caption_zh:'开漏输出', description_zh:'数字输出，可以被拉低，否则浮动'},
    { id: 'os_out'         , short_en:'Open-Source'                   , caption_en:'Open-Source Output'     , description_en:'Digital output pin that can be driven high, but floats otherwise.'                                                                      , caption_zh:'开源输出', description_zh:'数字输出，可以被拉高，否则浮动'},
    { id: 'usb_data'       , short_en:'USB Data'                      , caption_en:'USB Data'               , description_en:'USB data.'                                                                                                                              , caption_zh:'', description_zh:''},
    { id: 'ethernet_data'  , short_en:'Ethernet Data'                 , caption_en:'Ethernet Data'          , description_en:'Ethernet data.'                                                                                                                         , caption_zh:'', description_zh:''},
];
//..............................................................................

//..............................................................................
function addPinTypeDefinition(info)
{
    pinTypeLookup[info.id] = info;
    info.default_name = info.default_name || null;
}
//..............................................................................

//..............................................................................
function addElectricalTypes()
{
    processList(pinElectricalTypes,addPinTypeDefinition);
}
//..............................................................................

//..............................................................................
function getPinType(id)
{
    return pinTypeLookup[id] || null;
}
//..............................................................................

//..............................................................................
function getAllPinTypes(id)
{
    return deepClone(pinTypeLookup);
}
//..............................................................................

addElectricalTypes();
// console.log(pinTypeLookup);

addToNameSpace(getPinType    , 'getPinType'    );
addToNameSpace(getAllPinTypes, 'getAllPinTypes');

module.exports = {addPinTypeDefinition};
