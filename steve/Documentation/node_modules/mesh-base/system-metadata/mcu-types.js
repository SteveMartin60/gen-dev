//..............................................................................
// The MCU Chips that are supported by the Mesheven system.
// These can be used as:
//   - Core MCU-IC in MCU modules
//   - MCU-IC in intelligent peripheral modules
//   - MCU-IC in USB interfaces (Like MB0017)
//
// TODO NM: Later we will transfer these to a cloud-table
//..............................................................................

//..............................................................................
const {util} = cxq;
const {lockObject, stringToSha256Hex, stringToSha256MultiHash, isString} = util;
//..............................................................................

//..............................................................................
const types = lockObject
({
    // Used in peripheral modules
    STM32F03X     : {item:'CMPT-0104-0050', peripheral:true                     },
    STM32F05X     : {item:'CMPT-0104-0011', peripheral:true                     },
    STM32F07X     : {item:'CMPT-0104-0045', peripheral:true                     },
    STM32F3XX     : {item:'CMPT-0104-0061', peripheral:true                     },

    // Used in primary MCU modules - Like MB2K/3K/4K - Support device-OS
    STM32F4XX     : {item:'CMPT-0104-0053'                 , core:true          },
    STM32L4XX     : {item:'CMPT-0104-0052'                 , core:true          },
    NRF52832      : {item:'CMPT-0104-0055'                 , core:true          },

    // Used in USB interface modules - Like MB0017
    LPC11U35      : {item:'CMPT-0104-0029'                            , usb:true},
});
//..............................................................................

//..............................................................................
function getMcuRecord(mcuType, uniqueId)
{
    let result = null;
    if (types[mcuType] && isString(uniqueId) && uniqueId.length >= 16)
        result = mcuType + '|' + uniqueId;

    return result;
}
//..............................................................................

//..............................................................................
function getMcuHashId(mcuType, uniqueId)
{
    let result = null;
    const mcuRecord = getMcuRecord(mcuType, uniqueId);
    if (mcuRecord)
        result = stringToSha256Hex(mcuRecord);
    
  // console.log('getMcuHashId:',result);
    return result;
}
//..............................................................................

//..............................................................................
function getMcuMultiHashId(mcuType, uniqueId)
{
    let result = null;
    const mcuRecord = getMcuRecord(mcuType, uniqueId);
    if (mcuRecord)
        result = stringToSha256MultiHash(mcuRecord);

 // console.log('getMcuMultiHashId:',result);
    return result;
}
//..............................................................................

//..............................................................................
const publicScope =
{
    ...types,
    getMcuRecord,
    getMcuHashId,
    getMcuMultiHashId,
};
//..............................................................................

module.exports = publicScope;

