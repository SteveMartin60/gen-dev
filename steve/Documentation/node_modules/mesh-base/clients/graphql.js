//..............................................................................
const
{
    cloud,
    logger,
    util,
    httpClient
} = cxq;
//..............................................................................

//..............................................................................
const
{
    addProperties,
} = util;
//..............................................................................

//..............................................................................
var log = logger('graphql-client');
log.setLevel('info');
//..............................................................................

//..............................................................................
function sendGraphQL(props, callback)
{
    const
    {
        query,
        variables = {},
        urlPath,
        headers = {},
    } = props;

    const payload       = {query, variables};
    const payloadString = JSON.stringify(payload);
    headers['Content-Type'  ] = 'application/json';
    headers['Content-Length'] = payloadString.length;

    httpClient.post({data: payload, headers}, [urlPath], function(err,data)
    {
        callback(err,data);
    })
}
//..............................................................................

//..............................................................................
function sendGithubGraphQL(props, mainCallback)
{
    const maxAttempts = 1;
    var   attempts    = 0;
    const urlPath     = 'https://api.github.com/graphql';
    const {token, query, variables} = props;
    const headers =
    {
        'Authorization' : 'bearer ' + token,
        'User-Agent'    : 'GitHub GraphQL Client'
    };
    //..........................................................................
    function sendQuery()
    {
        attempts++;
        sendGraphQL({token, query, variables, urlPath, headers}, function(err, data)
        {
            if (err)
            {
                console.error('ERROR:sendGithubGraphQL:[', err, ']');
                if (attempts < maxAttempts)
                    sendQuery();
                else
                    mainCallback(err, data);
            }
            else
            {
                mainCallback(err, data);
            }
        });
    }
    ////////////////////////////////////////////////////////////////////////////
    sendQuery();
}
//..............................................................................

addProperties(cloud,
{
    sendGraphQL,
    sendGithubGraphQL
});
