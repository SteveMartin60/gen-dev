const jpeg = require('jpeg-js');
const png  = require('png-js' );

//..............................................................................
const {fs, path} = cxq;
//..............................................................................

//..............................................................................
function dataUriPng(source, callback)
{
    var pngData, err;

    try
    {
        pngData = source.slice(22);
        pngData = Buffer.from(pngData, 'base64');
        pngData = png.decode(pngData);
    }
    catch(e)
    {
        err     = e
        pngData = null;
    }

    callback(err, pngData);
}
//..............................................................................

//..............................................................................
function dataUriJpg(source, callback)
{
    var jpgData, err;

    try
    {
        jpgData = source.slice(22);
        jpgData = Buffer.from(jpgData, 'base64');
        jpgData = jpeg.decode(jpgData);
    }
    catch(e)
    {
        err     = e
        jpgData = null;
    }

    callback(err, jpgData);
}
//..............................................................................

//..............................................................................
function pathPng(source, callback)
{
    function callback_readFile(err, pngData)
    {
        if (err)
            return callback(err);

        try 
        {
            pngData = png.decode(pngData);
        }
        catch(e)
        {
            err     = e;
            pngData = null;
        }

        callback(err, pngData);        
    }
    //..........................................................................
    fs.readFile(source, callback_readFile);
}
//..............................................................................

//..............................................................................
function pathJpg(source, callback)
{   
    function callback_readFile(err, jpgData)
    {
        if (err)
            return callback(err);

        try 
        {
            jpgData = jpeg.decode(jpgData);
        }
        catch(e)
        {
            err     = e;
            jpgData = null;
        }

        callback(err, jpgData);        
    }
    //..........................................................................
    fs.readFile(source, callback_readFile);
}
//..............................................................................

//..............................................................................
function readImage(source, callback)
{       
    if (source && source.width && source.height)
    {
        callback(null, source);
    }
    else
    if (typeof source === 'string')
    {
        const extname = path.extname(source);
        var parserFn = null;
               
        if (source.indexOf('data:image/png') === 0)   
            parserFn = dataUriPng;
        else
        if (source.indexOf('data:images/jpg') === 0)
            parserFn = dataUriJpg;
        else
        if (extname === '.png')
            parserFn = pathPng;
        else
        if (extname === '.jpg' || extname === '.jpeg')
            parserFn = pathJpg;

        if (parserFn)
            parserFn(source, callback);
        else
            callback('Unsupported input');
    }
    else
    {
        callback('Unsupported input');
    }
}
//..............................................................................

module.exports = readImage;

