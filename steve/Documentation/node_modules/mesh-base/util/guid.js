//..............................................................................
const {util} = cxq;
//..............................................................................

//..............................................................................
const
{
    addProperties,
    getByteAsHex,
    insertString,
    toBase32
} = util;
//..............................................................................

//..............................................................................
// Random GUID from http://note19.com/2007/05/27/javascript-guid-generator/
// Just a big random number that looks like a GUID
//..............................................................................
function random()
{
    function S4()
    {
        return (((1+Math.random())*0x10000)|0).toString(16).substring(1);
    }
    ////////////////////////////////////////////////////////////////////////
    return (S4()+S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4()+S4()+S4());
}
//..............................................................................

//..............................................................................
//Simple fast hash from https://github.com/darkskyapp/string-hash
//..............................................................................
function meshHash(str)
{
    var hash = 5730132478;
    var len = str.length;
    for (var i=0; i<len; i++)
    {
        hash = (hash * 33) ^ str.charCodeAt(i);
    }
    return hash >>> 0;
}
//..............................................................................

//..............................................................................
function meshHashHex(str)
{
    var hash = meshHash(str).toString(16);
    return ("000000000" + hash).substr(-8);
}
//..............................................................................

//..............................................................................
function meshHashBase32(str)    //04n397kj
{
    var hash = meshHash(str);
    return toBase32(hash,8);
}
//..............................................................................

//..............................................................................
function meshHashHex64(str)
{
    var hash1 = meshHashHex(str+'fhd43z4ngfle');
    var hash2 = meshHashHex('295mg84pfgld'+str);
    return hash1+hash2;
}
//..............................................................................

//..............................................................................
function meshHashHex48(str)
{
    return meshHashHex64(str).substr(-12);
}
//..............................................................................

//..............................................................................
function makeGuidFromHexString(s)
{
    s = insertString(s,  8, '-');
    s = insertString(s, 13, '-');
    s = insertString(s, 18, '-');
    s = insertString(s, 23, '-');
    return s;
}
//..............................................................................

//..............................................................................
function makeHexStringFromGuid(s)
{
    return s.replace(/-/g, '');
}
//..............................................................................

//..............................................................................
function guidToByteArray(guid)
{
    var s = makeHexStringFromGuid(guid);

    var a = [];
    for (var i=0; i <16; i++)
    {
        var b = parseInt(s.substring(i*2, (i*2)+2), 16);
        a.push(b);
    }

    return a;
}
//..............................................................................

//..............................................................................
function byteArrayToGuid(a)
{
    var s = '';
    for (var i=0; i <a.length; i++)
    {
        s += getByteAsHex(a[i]);
    }
    s = makeGuidFromHexString(s);
    return s;
}
//..............................................................................

//..............................................................................
//var test1 = '000102030405060708090a0b0c0d0e0f';
//var test2 = makeGuidFromHexString(test1);
//var test3 = makeHexStringFromGuid(test2);
//var test4 = guidToByteArray(test2);
//var test5 = byteArrayToGuid(test4);
//
//console.log('Test1:',test1);
//console.log('Test2:',test2);
//console.log('Test3:',test3);
//console.log('Test4:',test4);
//console.log('Test5:',test5);
//..............................................................................

//..............................................................................
function makeReproducibleGUID(s1, s2, s3, s4)
{
    if (!s3)
    {
        s3 = s1 + 'alvhegbpnggwvagejkfg';
    }

    if (!s4)
    {
        s4 = s2 + 'jlkjdnkvhoppjkwnxlcf';
    }

    var h1 = meshHashHex(s1 + s2 + s3 + s4);
    var h2 = meshHashHex(s2 + s3 + s4 + s1);
    var h3 = meshHashHex(s3 + s4 + s1 + s2);
    var h4 = meshHashHex(s4 + s1 + s2 + s3);
    var s = h1 + h2 + h3 + h4;
    s = makeGuidFromHexString(s);
    return s;
}
//..............................................................................

//..............................................................................
function makeReproducibleUniqueId(source)
{
    return meshHashHex(source);
}
//..............................................................................

//..............................................................................
function makeReproducibleUsername(n1, n2)
{
    var h1 = meshHashHex('gihihxcbmpgproe' + n1);
    var h2 = meshHashHex('mqsdqwpgvlhhjyo' + n2);
    var s = 'device-' + h1 + '-' + h2;
    console.log('makeReproducibleUsername: ' + n1 + ' ' + n2 + ' ' + h1 + ' ' + h2 + ' ' + s);
    return s;
}
//..............................................................................

addProperties(util,
{
    random,
    meshHashHex,
    meshHashBase32,
    meshHashHex64,
    meshHashHex48,
    makeGuidFromHexString,
    makeHexStringFromGuid,
    guidToByteArray,
    byteArrayToGuid,
    makeReproducibleGUID,
    makeReproducibleUniqueId,
    makeReproducibleUsername
});

