const readImage = require('./qr-reader-source-reader-browser');
const QrWorker  = require('./qr-reader-browser.worker');

//..............................................................................
const {util, logger} = cxq;
//..............................................................................

//..............................................................................
const {addProperties, randomBase32, propertyCount} = util;
//..............................................................................

//..............................................................................
const log = logger('qr-reader');
log.setLevel('info');
//..............................................................................

//..............................................................................
var runningWorker   = null;
var inProgress      = {};
var shutdownTimeout = null;
//..............................................................................

//..............................................................................
function shutdownWorker()
{    
    if (!propertyCount(inProgress) && runningWorker)
    {        
        runningWorker.terminate();
        runningWorker = null;
        log.info('Shut down QR Reader worker');
    }
}
//..............................................................................

//..............................................................................
function startWorker()
{
    if (!runningWorker)
    {
        runningWorker           = new QrWorker();
        runningWorker.onmessage = handleWorkerMessage;
        log.info('Started QR Reader worker');
    }
}

//..............................................................................
function handleWorkerMessage(e)
{
    const {id, err, location, data} = e.data;
    const callback = inProgress[id];

    clearTimeout(shutdownTimeout);
    shutdownTimeout = setTimeout(shutdownWorker, 5000);

    if (callback)
    {
        delete inProgress[id];

        if (err)
            return callback(err);
        
        callback(null, {location, data});
    };        
}
//..............................................................................

//..............................................................................
function addToQueue({data, width, height}, callback)
{
    startWorker();

    const id = randomBase32();
    inProgress[id] = callback;
    runningWorker.postMessage({id, data, width, height});
}
//..............................................................................

//..............................................................................
function readQrImage(source, callback)
{    
    function callback_readImage(err, image)
    {
        if (err) return callback(err);
        addToQueue(image, callback);
    }
    //..........................................................................
    readImage(source, callback_readImage);        
}
//..............................................................................

addProperties(util,
{
    readQrImage
});