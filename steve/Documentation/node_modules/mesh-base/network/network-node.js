var networkInterfaces = require('os').networkInterfaces();
var os                = require('os' );
var net               = require('net');
var dns               = require('dns');
var portScanner       = require('portscanner');

//..............................................................................
const {util} = cxq;
//..............................................................................

//..............................................................................
const
{
    addProperties,
    processList
} = util;
//..............................................................................

//..............................................................................
function getIpAsInteger(address)
{
    var matches = address.match(/(\d+)\.(\d+)\.(\d+)\.(\d+)/);
    if (matches.length != 5)
    {
        return false;
    }
    else
    {
        return matches[1]*256*256*256 +
               matches[2]*256*256     +
               matches[3]*256         +
               matches[4];
    }
}
//..............................................................................

//..............................................................................
function getLocalMachineIP()
{
    var addresses = [];

    processList(networkInterfaces, function(dev)
    {
        var matchingInterfaces = dev.filter(function(details)
        {
            return details.family === 'IPv4' && details.internal === false;
        });
        processList(matchingInterfaces, function(match)
        {
            addresses.push({ip:match.address,mac:match.mac});
        });

    });
    return addresses;
}
//..............................................................................

//..............................................................................
function getLocalMachineAddress()
{
    var addresses = getLocalMachineIP();
    if (addresses && addresses.length == 1)
        return addresses[0].ip;
    else
        return null;
}
//..............................................................................

//..............................................................................
function getRemoteClientIP(req)
{
    var ipAddress = req.connection.remoteAddress;
    var forwardedIpsStr = req.header('x-forwarded-for');
    if (forwardedIpsStr)
    {
        // 'x-forwarded-for' header may return multiple IP addresses in
        // the format: "client IP, proxy 1 IP, proxy 2 IP" so take the
        // the first one
        ipAddress = forwardedIpsStr.split(',')[0];
    }
    if (ipAddress == '127.0.0.1' || ipAddress == '::1' || ipAddress == '::ffff:127.0.0.1')
        ipAddress = 'localhost';

    if (ipAddress.slice(0,7) === '::ffff:')
        ipAddress =  ipAddress.slice(7);

    return ipAddress || null;
}
//..............................................................................

//..............................................................................
function getRemoteUserAgent(req)
{
    return req.headers['user-agent'] || null;
}
//..............................................................................

//..............................................................................
function getIPAddressAsync(callback)
{
    var hostname = os.hostname();
    dns.lookup(hostname, callback);
}
//..............................................................................

addProperties(util,
{
    getLocalMachineAddress,
    getLocalMachineIP,
    getRemoteClientIP,
    getRemoteUserAgent,
    getIpAsInteger,
    getIPAddressAsync,
    findAPortInUse    : portScanner.findAPortInUse,
    findAPortNotInUse : portScanner.findAPortNotInUse
});
